#docker-compose.yml
#Engineer:  T. Looby
#Date: 20220124
#Description: Docker recipe for development.  Generates environment.
#             requires user to have the volumes below locally on host
#             if not, comment out the line for the dir you don't have
#             if so, change paths to match your machine
version: "3.0"

services:
  HEAT:
    #user: ${UID}:${GID}
    image: "plasmapotential/heat:v4.0"
    ports:
      - "8050:8050"
    volumes:
      #change volumes below to match your development (host) machine
      #format is: /host/path:/container/path
      #user should not edit container paths
      #
      - ../binaries:/opt/target
      # HEAT data directory on this machine (need to replace with absolute path on Windows)
      - ../../HEATData:/root/HEAT
#      # HEAT source code from github
      - ../:/root/source/HEAT
#      # ORNL EFIT class from github (if you have access, else in container)
#      - /home/tom/source/EFIT:/root/EFIT
#      # MAFOT bins and libs
#      - /home/tom/source/HEAT/MAFOT/bin:/root/opt/mafot/bin
#      - /home/tom/source/HEAT/MAFOT/lib:/root/opt/mafot/lib
#      # openFOAM bins and libs
#      - /opt/openfoam/OpenFOAM-v2106/bin:/root/opt/openfoam/bin
#      - /opt/openfoam/OpenFOAM-v2106/lib:/root/opt/openfoam/lib
#      #swak4foam bins / libs
#      - /home/tom/OpenFOAM/tom-v2106/platforms/linux64GccDPInt32Opt/bin:/root/opt/swak4foam/bin
#      - /home/tom/OpenFOAM/tom-v2106/platforms/linux64GccDPInt32Opt/lib:/root/opt/swak4foam/lib
#      # Batch mode directory
#      - /home/tom/HEATruns/SPARC/sweep7_T4:/root/terminal
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    #if you want to set env vars, do it here:
    environment:
    - dockerUID=$dockerUID
    - dockerGID=$dockerGID
    - UID=$dockerUID
    - GID=$dockerGID
    - OMPI_ALLOW_RUN_AS_ROOT=1
    - OMPI_ALLOW_RUN_AS_ROOT_CONFIRM=1
  app:
    container_name: heat_app
    build: ../app
    volumes: 
      - ../app:/app
    ports:
      - ${DEPLOYMENT_APP_PORT}:3030
  api:
    container_name: heat_api
    hostname: api
    build: ../api
    volumes:
      - ../api:/app
    ports:
      - ${DEPLOYMENT_API_PORT}:5000
  api_broker:
    container_name: ${DEPLOYMENT_API_BROKER_CONTAINER_NAME}
    hostname: ${DEPLOYMENT_API_BROKER_CONTAINER_NAME}
    image: redis:5.0.5
    command: redis-server --maxmemory 1gb --maxmemory-policy allkeys-lfu --save '' --appendonly no --protected-mode no --maxclients 1000 --timeout 61
    restart: always
  api_worker:
    container_name: ${DEPLOYMENT_API_WORKER_CONTAINER_NAME}
    hostname: ${DEPLOYMENT_API_WORKER_CONTAINER_NAME}
    build: ../api
    command: celery --app app.celery worker --concurrency=10 --loglevel=info
    environment:
      - CELERY_WORKER=true
    volumes:
      - ../api:/app
  


#NOTES:
#to run HEAT in batch mode, first bind mount the /root/terminal directory to your
#local directory with the batchFile, then run:
# python3 launchHEAT.py --m t --f /root/terminal/batchFile.dat
#
#to run an interactive shell use this command:
# docker-compose run HEAT /bin/bash
#
# to change image tag name:
# docker tag plasmapotential/heat:latest plasmapotential/heat:<tag>
